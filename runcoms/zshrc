#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
HISTFILE=~/.histfile
HISTSIZE=9999
SAVEHIST=9999
bindkey -v

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
	source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Source my aliases
if [ -f "${ZDOTDIR:-$HOME}/.zprezto/runcoms/aliases" ]; then
	source "${ZDOTDIR:-$HOME}/.zprezto/runcoms/aliases"
fi

# Load up Cod.
# if (( $+commands[screen] )); then
#   source <(cod init $$ zsh)
# fi

# Load Zoxide
if (( $+commands[zoxide] )); then
  eval "$(zoxide init --cmd cd zsh)"
fi

# Source local and specific zshrc file
if [ -f "${HOME}/.local/zshrc" ]; then
  source "${HOME}/.local/zshrc"
fi

#The fuck
if $(which thefuck 2>&1 1>/dev/null); then
	eval $(thefuck --alias)
fi

mind.blow() {
	poweroff
}

# Curl JSON
jcurl() {
  /bin/curl $@ | jq .
}

# Get my ip
myip() {
  dig +short myip.opendns.com @resolver1.opendns.com
}

tmpdir() {
  cd $(mktemp -d)
}

# Accept auto suggestion
bindkey '^y' autosuggest-accept

#######################################
# turn off tracing
#unsetopt xtrace
# restore stderr to the value saved in FD 3
#exec 2>&3 3>&-

# FZF
if which fzf >/dev/null 2>&1; then
  [ -f /usr/share/fzf/key-bindings.zsh ] && source /usr/share/fzf/key-bindings.zsh
  [ -f /usr/share/fzf/completion.zsh ] && source /usr/share/fzf/completion.zsh
  if which bat >/dev/null 2>&1; then
    PREVIEW='bat --style=plain --color=always --line-range :40 {}'
  else
    PREVIEW='head -40 {}'
  fi

  export FZF_CTRL_T_OPTS="--height 50% --reverse --border --preview '([[ -d {}  ]] && ls --color=always {}) || (( false && (echo {} is a binary file)) || ($PREVIEW))'"
fi

if (( $+commands[kubectl] )); then
  source <(kubectl completion zsh)
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/vault vault

# pnpm
export PNPM_HOME="/home/robertoalegro/.local/share/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/etc/profile.d/conda.sh" ]; then
        . "/usr/etc/profile.d/conda.sh"
    else
        export PATH="/usr/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Env vars
if [[ ! -z $commands[direnv] ]]; then
  eval "$(direnv hook zsh)"
fi

# Mise config
if [[ ! -z $commands[mise] ]]; then
  eval "$(mise activate zsh)"
fi
